package week07

object session1 {
	
	def isPrime(x: Int): Boolean = true       //> isPrime: (x: Int)Boolean
	
	((1000 to 10000) filter isPrime)(1)       //> res0: Int = 1001
	
	
	def secondPrime(from: Int, to: Int) = nthPrime(from, to, 2)
                                                  //> secondPrime: (from: Int, to: Int)Int
def nthPrime(from: Int, to: Int, n: Int): Int =
if (from >= to) throw new Error("no prime")
else if (isPrime(from))
if (n == 1) from else nthPrime(from + 1, to, n - 1)
else nthPrime(from + 1, to, n)                    //> nthPrime: (from: Int, to: Int, n: Int)Int
}